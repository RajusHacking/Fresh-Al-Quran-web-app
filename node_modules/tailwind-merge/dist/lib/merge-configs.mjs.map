{"version":3,"file":"merge-configs.mjs","sources":["../../src/lib/merge-configs.ts"],"sourcesContent":["import { Config } from './types'\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nexport function mergeConfigs(baseConfig: Config, configExtension: Partial<Config>) {\n    for (const key in configExtension) {\n        mergePropertyRecursively(baseConfig as any, key, configExtension[key as keyof Config])\n    }\n\n    return baseConfig\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst overrideTypes = new Set(['string', 'number', 'boolean'])\n\nfunction mergePropertyRecursively(\n    baseObject: Record<string, unknown>,\n    mergeKey: string,\n    mergeValue: unknown,\n) {\n    if (\n        !hasOwnProperty.call(baseObject, mergeKey) ||\n        overrideTypes.has(typeof mergeValue) ||\n        mergeValue === null\n    ) {\n        baseObject[mergeKey] = mergeValue\n        return\n    }\n\n    if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {\n        baseObject[mergeKey] = (baseObject[mergeKey] as unknown[]).concat(mergeValue)\n        return\n    }\n\n    if (typeof mergeValue === 'object' && typeof baseObject[mergeKey] === 'object') {\n        if (baseObject[mergeKey] === null) {\n            baseObject[mergeKey] = mergeValue\n            return\n        }\n\n        for (const nextKey in mergeValue) {\n            mergePropertyRecursively(\n                baseObject[mergeKey] as Record<string, unknown>,\n                nextKey,\n                mergeValue[nextKey as keyof object],\n            )\n        }\n    }\n}\n"],"names":["mergeConfigs","baseConfig","configExtension","key","mergePropertyRecursively","hasOwnProperty","Object","prototype","overrideTypes","Set","baseObject","mergeKey","mergeValue","call","has","Array","isArray","concat","nextKey"],"mappings":"AAEA;;;AAGG;AACa,SAAAA,YAAA,CAAaC,UAAb,EAAiCC,eAAjC,EAAiE;AAC7E,EAAA,KAAK,IAAMC,GAAX,IAAkBD,eAAlB,EAAmC;IAC/BE,wBAAwB,CAACH,UAAD,EAAoBE,GAApB,EAAyBD,eAAe,CAACC,GAAD,CAAxC,CAAxB,CAAA;AACH,GAAA;;AAED,EAAA,OAAOF,UAAP,CAAA;AACH,CAAA;AAED,IAAMI,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC,CAAA;AACA,IAAMG,aAAa,gBAAG,IAAIC,GAAJ,CAAQ,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAR,CAAtB,CAAA;;AAEA,SAASL,wBAAT,CACIM,UADJ,EAEIC,QAFJ,EAGIC,UAHJ,EAGuB;EAEnB,IACI,CAACP,cAAc,CAACQ,IAAf,CAAoBH,UAApB,EAAgCC,QAAhC,CAAD,IACAH,aAAa,CAACM,GAAd,CAAkB,OAAOF,UAAzB,CADA,IAEAA,UAAU,KAAK,IAHnB,EAIE;AACEF,IAAAA,UAAU,CAACC,QAAD,CAAV,GAAuBC,UAAvB,CAAA;AACA,IAAA,OAAA;AACH,GAAA;;AAED,EAAA,IAAIG,KAAK,CAACC,OAAN,CAAcJ,UAAd,CAA6BG,IAAAA,KAAK,CAACC,OAAN,CAAcN,UAAU,CAACC,QAAD,CAAxB,CAAjC,EAAsE;AAClED,IAAAA,UAAU,CAACC,QAAD,CAAV,GAAwBD,UAAU,CAACC,QAAD,CAAV,CAAmCM,MAAnC,CAA0CL,UAA1C,CAAxB,CAAA;AACA,IAAA,OAAA;AACH,GAAA;;AAED,EAAA,IAAI,OAAOA,UAAP,KAAsB,QAAtB,IAAkC,OAAOF,UAAU,CAACC,QAAD,CAAjB,KAAgC,QAAtE,EAAgF;AAC5E,IAAA,IAAID,UAAU,CAACC,QAAD,CAAV,KAAyB,IAA7B,EAAmC;AAC/BD,MAAAA,UAAU,CAACC,QAAD,CAAV,GAAuBC,UAAvB,CAAA;AACA,MAAA,OAAA;AACH,KAAA;;AAED,IAAA,KAAK,IAAMM,OAAX,IAAsBN,UAAtB,EAAkC;AAC9BR,MAAAA,wBAAwB,CACpBM,UAAU,CAACC,QAAD,CADU,EAEpBO,OAFoB,EAGpBN,UAAU,CAACM,OAAD,CAHU,CAAxB,CAAA;AAKH,KAAA;AACJ,GAAA;AACJ;;;;"}