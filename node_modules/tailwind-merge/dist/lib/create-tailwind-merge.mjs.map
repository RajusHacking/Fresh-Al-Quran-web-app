{"version":3,"file":"create-tailwind-merge.mjs","sources":["../../src/lib/create-tailwind-merge.ts"],"sourcesContent":["import { createConfigUtils } from './config-utils'\nimport { mergeClassList } from './merge-classlist'\nimport { ClassNameValue, twJoin } from './tw-join'\nimport { Config } from './types'\n\ntype CreateConfigFirst = () => Config\ntype CreateConfigSubsequent = (config: Config) => Config\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\n\nexport function createTailwindMerge(\n    ...createConfig: [CreateConfigFirst, ...CreateConfigSubsequent[]]\n): TailwindMerge {\n    let configUtils: ConfigUtils\n    let cacheGet: ConfigUtils['cache']['get']\n    let cacheSet: ConfigUtils['cache']['set']\n    let functionToCall = initTailwindMerge\n\n    function initTailwindMerge(classList: string) {\n        const [firstCreateConfig, ...restCreateConfig] = createConfig\n\n        const config = restCreateConfig.reduce(\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\n            firstCreateConfig(),\n        )\n\n        configUtils = createConfigUtils(config)\n        cacheGet = configUtils.cache.get\n        cacheSet = configUtils.cache.set\n        functionToCall = tailwindMerge\n\n        return tailwindMerge(classList)\n    }\n\n    function tailwindMerge(classList: string) {\n        const cachedResult = cacheGet(classList)\n\n        if (cachedResult) {\n            return cachedResult\n        }\n\n        const result = mergeClassList(classList, configUtils)\n        cacheSet(classList, result)\n\n        return result\n    }\n\n    return function callTailwindMerge() {\n        return functionToCall(twJoin.apply(null, arguments as any))\n    }\n}\n"],"names":["createTailwindMerge","createConfig","configUtils","cacheGet","cacheSet","functionToCall","initTailwindMerge","classList","firstCreateConfig","restCreateConfig","config","reduce","previousConfig","createConfigCurrent","createConfigUtils","cache","get","set","tailwindMerge","cachedResult","result","mergeClassList","callTailwindMerge","twJoin","apply","arguments"],"mappings":";;;;AAUgB,SAAAA,mBAAA,GACqD;AAAA,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAA9DC,YAA8D,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;IAA9DA,YAA8D,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAAA,GAAA;;AAEjE,EAAA,IAAIC,WAAJ,CAAA;AACA,EAAA,IAAIC,QAAJ,CAAA;AACA,EAAA,IAAIC,QAAJ,CAAA;EACA,IAAIC,cAAc,GAAGC,iBAArB,CAAA;;EAEA,SAASA,iBAAT,CAA2BC,SAA3B,EAA4C;IACxC,IAAOC,iBAAP,GAAiDP,YAAjD,CAAA,CAAA,CAAA;QAA6BQ,gBAA7B,GAAiDR,YAAjD,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;IAEA,IAAMS,MAAM,GAAGD,gBAAgB,CAACE,MAAjB,CACX,UAACC,cAAD,EAAiBC,mBAAjB,EAAA;MAAA,OAAyCA,mBAAmB,CAACD,cAAD,CAA5D,CAAA;KADW,EAEXJ,iBAAiB,EAFN,CAAf,CAAA;AAKAN,IAAAA,WAAW,GAAGY,iBAAiB,CAACJ,MAAD,CAA/B,CAAA;AACAP,IAAAA,QAAQ,GAAGD,WAAW,CAACa,KAAZ,CAAkBC,GAA7B,CAAA;AACAZ,IAAAA,QAAQ,GAAGF,WAAW,CAACa,KAAZ,CAAkBE,GAA7B,CAAA;AACAZ,IAAAA,cAAc,GAAGa,aAAjB,CAAA;IAEA,OAAOA,aAAa,CAACX,SAAD,CAApB,CAAA;AACH,GAAA;;EAED,SAASW,aAAT,CAAuBX,SAAvB,EAAwC;AACpC,IAAA,IAAMY,YAAY,GAAGhB,QAAQ,CAACI,SAAD,CAA7B,CAAA;;AAEA,IAAA,IAAIY,YAAJ,EAAkB;AACd,MAAA,OAAOA,YAAP,CAAA;AACH,KAAA;;AAED,IAAA,IAAMC,MAAM,GAAGC,cAAc,CAACd,SAAD,EAAYL,WAAZ,CAA7B,CAAA;AACAE,IAAAA,QAAQ,CAACG,SAAD,EAAYa,MAAZ,CAAR,CAAA;AAEA,IAAA,OAAOA,MAAP,CAAA;AACH,GAAA;;EAED,OAAO,SAASE,iBAAT,GAA0B;IAC7B,OAAOjB,cAAc,CAACkB,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAD,CAArB,CAAA;GADJ,CAAA;AAGH;;;;"}