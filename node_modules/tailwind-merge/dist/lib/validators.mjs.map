{"version":3,"file":"validators.mjs","sources":["../../src/lib/validators.ts"],"sourcesContent":["const arbitraryValueRegex = /^\\[(.+)\\]$/\nconst fractionRegex = /^\\d+\\/\\d+$/\nconst stringLengths = new Set(['px', 'full', 'screen'])\nconst tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh)/\n// Shadow always begins with x and y offset separated by underscore\nconst shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\n\nexport function isLength(classPart: string) {\n    return (\n        !Number.isNaN(Number(classPart)) ||\n        stringLengths.has(classPart) ||\n        fractionRegex.test(classPart) ||\n        isArbitraryLength(classPart)\n    )\n}\n\nexport function isArbitraryLength(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n\nexport function isArbitrarySize(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('size:') : false\n}\n\nexport function isArbitraryPosition(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue ? arbitraryValue.startsWith('position:') : false\n}\n\nexport function isArbitraryUrl(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:')\n        : false\n}\n\nexport function isArbitraryNumber(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    return arbitraryValue\n        ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('number:')\n        : false\n}\n\n/**\n * @deprecated Will be removed in next major version. Use `isArbitraryNumber` instead.\n */\nexport const isArbitraryWeight = isArbitraryNumber\n\nexport function isInteger(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return Number.isInteger(Number(arbitraryValue))\n    }\n\n    return Number.isInteger(Number(classPart))\n}\n\nexport function isArbitraryValue(classPart: string) {\n    return arbitraryValueRegex.test(classPart)\n}\n\nexport function isAny() {\n    return true\n}\n\nexport function isTshirtSize(classPart: string) {\n    return tshirtUnitRegex.test(classPart)\n}\n\nexport function isArbitraryShadow(classPart: string) {\n    const arbitraryValue = arbitraryValueRegex.exec(classPart)?.[1]\n\n    if (arbitraryValue) {\n        return shadowRegex.test(arbitraryValue)\n    }\n\n    return false\n}\n"],"names":["arbitraryValueRegex","fractionRegex","stringLengths","Set","tshirtUnitRegex","lengthUnitRegex","shadowRegex","isLength","classPart","Number","isNaN","has","test","isArbitraryLength","arbitraryValue","exec","startsWith","isArbitrarySize","isArbitraryPosition","isArbitraryUrl","isArbitraryNumber","isArbitraryWeight","isInteger","isArbitraryValue","isAny","isTshirtSize","isArbitraryShadow"],"mappings":"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"}